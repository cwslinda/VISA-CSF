{"ast":null,"code":"import * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/router\";\nimport * as i2 from \"@angular/forms\";\nimport * as i3 from \"./service/post.service\";\nconst _c0 = function () {\n  return [\"/\"];\n};\nexport class AppComponent {\n  constructor(router, fb, postSvc) {\n    this.router = router;\n    this.fb = fb;\n    this.postSvc = postSvc;\n    this.title = 'day39-demo';\n    this.posts = [];\n    this.imageData = \"\";\n  }\n  ngOnInit() {\n    if (!this.postSvc.imageData) {\n      this.router.navigate(['/']);\n      return;\n    }\n    this.imageData = this.postSvc.imageData;\n    this.postForm = this.fb.group({\n      title: this.fb.control(''),\n      text: this.fb.control('')\n    });\n    this.blob = this.dataURItoBlob(this.imageData);\n    console.log(\">>> blob:\", this.blob);\n  }\n  dataURItoBlob(dataURI) {\n    var byteString = atob(dataURI.split(',')[1]);\n    var mimeString = dataURI.split(',')[0].split(':')[1].split(';')[0];\n    var ab = new ArrayBuffer(byteString.length);\n    var ia = new Uint8Array(ab);\n    for (var i = 0; i < byteString.length; i++) {\n      ia[i] = byteString.charCodeAt(i);\n    }\n    return new Blob([ab], {\n      type: mimeString\n    });\n  }\n}\nAppComponent.ɵfac = function AppComponent_Factory(t) {\n  return new (t || AppComponent)(i0.ɵɵdirectiveInject(i1.Router), i0.ɵɵdirectiveInject(i2.FormBuilder), i0.ɵɵdirectiveInject(i3.PostService));\n};\nAppComponent.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n  type: AppComponent,\n  selectors: [[\"app-root\"]],\n  decls: 28,\n  vars: 4,\n  consts: [[3, \"formGroup\", \"ngSubmit\"], [1, \"thumbnail\", 3, \"src\"], [\"type\", \"text\", \"size\", \"30\", \"formControlName\", \"title\"], [\"cols\", \"30\", \"rows\", \"4\", \"formControlName\", \"complain\"], [\"type\", \"button\", 3, \"routerLink\"], [\"type\", \"submit\"]],\n  template: function AppComponent_Template(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵtext(0, \"Upload Page\\n\");\n      i0.ɵɵelementStart(1, \"form\", 0);\n      i0.ɵɵlistener(\"ngSubmit\", function AppComponent_Template_form_ngSubmit_1_listener() {\n        return ctx.upload();\n      });\n      i0.ɵɵelementStart(2, \"table\")(3, \"tr\");\n      i0.ɵɵelement(4, \"td\");\n      i0.ɵɵelementStart(5, \"td\")(6, \"div\");\n      i0.ɵɵelement(7, \"img\", 1);\n      i0.ɵɵelementEnd()()();\n      i0.ɵɵelementStart(8, \"tr\")(9, \"td\");\n      i0.ɵɵtext(10, \"Title:\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(11, \"td\");\n      i0.ɵɵelement(12, \"input\", 2);\n      i0.ɵɵelementEnd()();\n      i0.ɵɵelementStart(13, \"tr\")(14, \"td\");\n      i0.ɵɵtext(15, \"Complain:\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(16, \"td\")(17, \"textarea\", 3);\n      i0.ɵɵtext(18, \"        \");\n      i0.ɵɵelementEnd()()();\n      i0.ɵɵelementStart(19, \"tr\");\n      i0.ɵɵelement(20, \"td\");\n      i0.ɵɵelementStart(21, \"td\")(22, \"button\", 4);\n      i0.ɵɵtext(23, \"Back\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(24, \"button\", 5);\n      i0.ɵɵtext(25, \"Upload\");\n      i0.ɵɵelementEnd()()()()();\n      i0.ɵɵelementStart(26, \"div\");\n      i0.ɵɵelement(27, \"router-outlet\");\n      i0.ɵɵelementEnd();\n    }\n    if (rf & 2) {\n      i0.ɵɵadvance(1);\n      i0.ɵɵproperty(\"formGroup\", ctx.complainForm);\n      i0.ɵɵadvance(6);\n      i0.ɵɵproperty(\"src\", ctx.cameraSvc.imageData, i0.ɵɵsanitizeUrl);\n      i0.ɵɵadvance(15);\n      i0.ɵɵproperty(\"routerLink\", i0.ɵɵpureFunction0(3, _c0));\n    }\n  },\n  dependencies: [i1.RouterOutlet, i1.RouterLink],\n  styles: [\"\\n/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsInNvdXJjZVJvb3QiOiIifQ== */\"]\n});","map":{"version":3,"mappings":";;;;;;;AAWA,OAAM,MAAOA,YAAY;EAWvBC,YAAoBC,MAAc,EAAUC,EAAe,EAAUC,OAAoB;IAArE,WAAM,GAANF,MAAM;IAAkB,OAAE,GAAFC,EAAE;IAAuB,YAAO,GAAPC,OAAO;IAV5E,UAAK,GAAG,YAAY;IAKpB,UAAK,GAAW,EAAE;IAClB,cAAS,GAAG,EAAE;EAI6E;EAE3FC,QAAQ;IACN,IAAG,CAAC,IAAI,CAACD,OAAO,CAACE,SAAS,EAAC;MACzB,IAAI,CAACJ,MAAM,CAACK,QAAQ,CAAC,CAAC,GAAG,CAAC,CAAC;MAC3B;;IAEF,IAAI,CAACD,SAAS,GAAG,IAAI,CAACF,OAAO,CAACE,SAAS;IACvC,IAAI,CAACE,QAAQ,GAAG,IAAI,CAACL,EAAE,CAACM,KAAK,CAAC;MAC5BC,KAAK,EAAE,IAAI,CAACP,EAAE,CAACQ,OAAO,CAAS,EAAE,CAAC;MAClCC,IAAI,EAAE,IAAI,CAACT,EAAE,CAACQ,OAAO,CAAS,EAAE;KACjC,CAAC;IACF,IAAI,CAACE,IAAI,GAAG,IAAI,CAACC,aAAa,CAAC,IAAI,CAACR,SAAS,CAAC;IAC9CS,OAAO,CAACC,GAAG,CAAC,WAAW,EAAE,IAAI,CAACH,IAAI,CAAC;EACtC;EAECC,aAAa,CAACG,OAAe;IAC7B,IAAIC,UAAU,GAAGC,IAAI,CAACF,OAAO,CAACG,KAAK,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,CAAC;IAE5C,IAAIC,UAAU,GAAGJ,OAAO,CAACG,KAAK,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,CAACA,KAAK,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,CAACA,KAAK,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC;IAGlE,IAAIE,EAAE,GAAG,IAAIC,WAAW,CAACL,UAAU,CAACM,MAAM,CAAC;IAC3C,IAAIC,EAAE,GAAG,IAAIC,UAAU,CAACJ,EAAE,CAAC;IAC3B,KAAK,IAAIK,CAAC,GAAG,CAAC,EAAEA,CAAC,GAAGT,UAAU,CAACM,MAAM,EAAEG,CAAC,EAAE,EAAE;MACxCF,EAAE,CAACE,CAAC,CAAC,GAAGT,UAAU,CAACU,UAAU,CAACD,CAAC,CAAC;;IAGtC,OAAO,IAAIE,IAAI,CAAC,CAACP,EAAE,CAAC,EAAE;MAACQ,IAAI,EAAET;IAAU,CAAC,CAAC;EAGzC;;AA1CarB,YAAY;mBAAZA,YAAY;AAAA;AAAZA,YAAY;QAAZA,YAAY;EAAA+B;EAAAC;EAAAC;EAAAC;EAAAC;IAAA;MCXzBC,6BACA;MAAAA,+BAAuD;MAAtBA;QAAA,OAAYC,YAAQ;MAAA,EAAC;MAEpDD,6BAAO;MAEHA,qBAAS;MACTA,0BAAI;MAEAA,yBAAmD;MACrDA,iBAAM;MAGVA,0BAAI;MACEA,uBAAM;MAAAA,iBAAK;MACfA,2BAAI;MAAAA,4BAAqD;MAAAA,iBAAK;MAEhEA,2BAAI;MACEA,0BAAS;MAAAA,iBAAK;MAClBA,2BAAI;MAEFA;MAAAA,iBAAW;MAGfA,2BAAI;MACFA,sBAAS;MACTA,2BAAI;MACyCA,qBAAI;MAAAA,iBAAS;MACxDA,kCAAsB;MAAAA,uBAAM;MAAAA,iBAAS;MAQ7CA,4BAAK;MACHA,iCAA+B;MACjCA,iBAAM;;;MApCAA,eAA0B;MAA1BA,4CAA0B;MAOjBA,eAA2B;MAA3BA,+DAA2B;MAkBZA,gBAAoB;MAApBA,uDAAoB","names":["AppComponent","constructor","router","fb","postSvc","ngOnInit","imageData","navigate","postForm","group","title","control","text","blob","dataURItoBlob","console","log","dataURI","byteString","atob","split","mimeString","ab","ArrayBuffer","length","ia","Uint8Array","i","charCodeAt","Blob","type","selectors","decls","vars","consts","template","i0","ctx"],"sourceRoot":"","sources":["/Users/cws/Desktop/code/VISA/VISA-CSF/day39-demo/client/src/app/app.component.ts","/Users/cws/Desktop/code/VISA/VISA-CSF/day39-demo/client/src/app/app.component.html"],"sourcesContent":["import { Component, OnInit } from '@angular/core';\nimport { FormBuilder, FormGroup, Validators } from '@angular/forms';\nimport { Router } from '@angular/router';\nimport { Post } from './model/model';\nimport { PostService } from './service/post.service';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.css']\n})\nexport class AppComponent implements OnInit {\n  title = 'day39-demo';\n\n  postForm!: FormGroup\n  \n  post!: Post \n  posts: Post[] = []\n  imageData = \"\"\n  blob!: Blob\n\n\n  constructor(private router: Router, private fb: FormBuilder, private postSvc: PostService){}\n     \n  ngOnInit(): void {\n    if(!this.postSvc.imageData){\n      this.router.navigate(['/'])\n      return\n    }\n    this.imageData = this.postSvc.imageData\n    this.postForm = this.fb.group({\n      title: this.fb.control<string>(''), \n      text: this.fb.control<string>('')\n    })\n    this.blob = this.dataURItoBlob(this.imageData)\n    console.log(\">>> blob:\", this.blob)\n }\n\n  dataURItoBlob(dataURI: string){\n  var byteString = atob(dataURI.split(',')[1])\n\n  var mimeString = dataURI.split(',')[0].split(':')[1].split(';')[0];\n\n\n  var ab = new ArrayBuffer(byteString.length);\n  var ia = new Uint8Array(ab);\n  for (var i = 0; i < byteString.length; i++) {\n      ia[i] = byteString.charCodeAt(i);\n}\n\nreturn new Blob([ab], {type: mimeString});\n\n\n}\n\n\n}\n\n\n","Upload Page\n<form [formGroup]=\"complainForm\" (ngSubmit)=\"upload()\">\n\n  <table>\n    <tr>\n      <td></td>\n      <td>\n        <div>\n          <img [src]=\"cameraSvc.imageData\" class=\"thumbnail\">\n        </div>\n      </td>\n    </tr>\n    <tr>\n      <td>Title:</td>\n      <td><input type=\"text\" size=\"30\" formControlName=\"title\"></td>\n    </tr>\n    <tr>\n      <td>Complain:</td>\n      <td>\n        <textarea cols=\"30\" rows=\"4\" formControlName=\"complain\">\n        </textarea>\n      </td>\n    </tr>\n    <tr>\n      <td></td>\n      <td>\n        <button type=\"button\" [routerLink]=\"['/']\">Back</button>\n        <button type=\"submit\">Upload</button>\n      </td>\n    </tr>\n  </table>\n\n</form>\n\n\n<div>\n  <router-outlet></router-outlet>\n</div>"]},"metadata":{},"sourceType":"module","externalDependencies":[]}