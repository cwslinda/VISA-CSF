{"ast":null,"code":"import * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/router\";\nimport * as i2 from \"@angular/forms\";\nimport * as i3 from \"../service/post.service\";\nconst _c0 = function () {\n  return [\"/\"];\n};\nexport class MasterComponent {\n  constructor(router, fb, postSvc) {\n    this.router = router;\n    this.fb = fb;\n    this.postSvc = postSvc;\n    this.posts = [];\n    this.imageData = \"\";\n  }\n  ngOnInit() {\n    this.imageData = this.postSvc.imageData;\n    this.postForm = this.fb.group({\n      title: this.fb.control(''),\n      text: this.fb.control(''),\n      image: this.fb.control\n    });\n    this.blob = this.dataURItoBlob(this.imageData);\n    console.log(\">>> blob:\", this.blob);\n  }\n  upload() {\n    const value = this.postForm.value;\n    console.log('value', value);\n    this.postSvc.upload(value, this.blob).then(result => {\n      this.router.navigate(['/']);\n    }).catch(err => {\n      console.error('>>> error', err);\n    });\n  }\n  dataURItoBlob(dataURI) {\n    var byteString = atob(dataURI.split(',')[1]);\n    var mimeString = dataURI.split(',')[0].split(':')[1].split(';')[0];\n    var ab = new ArrayBuffer(byteString.length);\n    var ia = new Uint8Array(ab);\n    for (var i = 0; i < byteString.length; i++) {\n      ia[i] = byteString.charCodeAt(i);\n    }\n    return new Blob([ab], {\n      type: mimeString\n    });\n  }\n}\nMasterComponent.ɵfac = function MasterComponent_Factory(t) {\n  return new (t || MasterComponent)(i0.ɵɵdirectiveInject(i1.Router), i0.ɵɵdirectiveInject(i2.FormBuilder), i0.ɵɵdirectiveInject(i3.PostService));\n};\nMasterComponent.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n  type: MasterComponent,\n  selectors: [[\"app-master\"]],\n  decls: 28,\n  vars: 3,\n  consts: [[3, \"formGroup\", \"ngSubmit\"], [\"type\", \"file\", \"formControlName\", \"image\"], [\"type\", \"text\", \"size\", \"30\", \"formControlName\", \"title\"], [\"cols\", \"30\", \"rows\", \"4\", \"formControlName\", \"text\"], [\"type\", \"button\", 3, \"routerLink\"], [\"type\", \"submit\"]],\n  template: function MasterComponent_Template(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵelement(0, \"h1\");\n      i0.ɵɵelementStart(1, \"form\", 0);\n      i0.ɵɵlistener(\"ngSubmit\", function MasterComponent_Template_form_ngSubmit_1_listener() {\n        return ctx.upload();\n      });\n      i0.ɵɵelementStart(2, \"table\")(3, \"tr\")(4, \"td\");\n      i0.ɵɵtext(5, \"Image:\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(6, \"td\");\n      i0.ɵɵelement(7, \"input\", 1);\n      i0.ɵɵelementEnd()();\n      i0.ɵɵelementStart(8, \"tr\")(9, \"td\");\n      i0.ɵɵtext(10, \"Title:\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(11, \"td\");\n      i0.ɵɵelement(12, \"input\", 2);\n      i0.ɵɵelementEnd()();\n      i0.ɵɵelementStart(13, \"tr\")(14, \"td\");\n      i0.ɵɵtext(15, \"Text:\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(16, \"td\")(17, \"textarea\", 3);\n      i0.ɵɵtext(18, \"        \");\n      i0.ɵɵelementEnd()()();\n      i0.ɵɵelementStart(19, \"tr\");\n      i0.ɵɵelement(20, \"td\");\n      i0.ɵɵelementStart(21, \"td\")(22, \"button\", 4);\n      i0.ɵɵtext(23, \"Back\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(24, \"button\", 5);\n      i0.ɵɵtext(25, \"Upload\");\n      i0.ɵɵelementEnd()()()()();\n      i0.ɵɵelementStart(26, \"div\");\n      i0.ɵɵelement(27, \"router-outlet\");\n      i0.ɵɵelementEnd();\n    }\n    if (rf & 2) {\n      i0.ɵɵadvance(1);\n      i0.ɵɵproperty(\"formGroup\", ctx.postForm);\n      i0.ɵɵadvance(21);\n      i0.ɵɵproperty(\"routerLink\", i0.ɵɵpureFunction0(2, _c0));\n    }\n  },\n  dependencies: [i1.RouterOutlet, i1.RouterLink, i2.ɵNgNoValidate, i2.DefaultValueAccessor, i2.NgControlStatus, i2.NgControlStatusGroup, i2.FormGroupDirective, i2.FormControlName],\n  styles: [\"\\n/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsInNvdXJjZVJvb3QiOiIifQ== */\"]\n});","map":{"version":3,"mappings":"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","names":["MasterComponent","constructor","router","fb","postSvc","ngOnInit","imageData","postForm","group","title","control","text","image","blob","dataURItoBlob","console","log","upload","value","then","result","navigate","catch","err","error","dataURI","byteString","atob","split","mimeString","ab","ArrayBuffer","length","ia","Uint8Array","i","charCodeAt","Blob","type","selectors","decls","vars","consts","template","i0","ctx"],"sourceRoot":"","sources":["/Users/cws/Desktop/code/VISA/VISA-CSF/day39-demo/client/src/app/components/master.component.ts","/Users/cws/Desktop/code/VISA/VISA-CSF/day39-demo/client/src/app/components/master.component.html"],"sourcesContent":["import { Component } from '@angular/core';\nimport { FormBuilder, FormGroup } from '@angular/forms';\nimport { Router } from '@angular/router';\nimport { Post } from '../model/model';\nimport { PostService } from '../service/post.service';\n\n@Component({\n  selector: 'app-master',\n  templateUrl: './master.component.html',\n  styleUrls: ['./master.component.css']\n})\nexport class MasterComponent {\n\n\n  postForm!: FormGroup\n  \n  post!: Post \n  posts: Post[] = []\n  imageData = \"\"\n  blob!: Blob\n\n\n  constructor(private router: Router, private fb: FormBuilder, public postSvc: PostService){}\n     \n  ngOnInit(): void {\n  \n    this.imageData = this.postSvc.imageData\n    this.postForm = this.fb.group({\n      title: this.fb.control<string>(''), \n      text: this.fb.control<string>(''),\n      image: this.fb.control<Blob>\n    })\n    this.blob = this.dataURItoBlob(this.imageData)\n    console.log(\">>> blob:\", this.blob)\n }\n\n upload(){\n  const value = this.postForm.value\n  console.log('value', value)\n  this.postSvc.upload(value, this.blob)\n    .then(result => {\n      this.router.navigate(['/'])\n    })\n    .catch(err => {\n      console.error('>>> error', err)\n    })\n}\n\n  dataURItoBlob(dataURI: string){\n  var byteString = atob(dataURI.split(',')[1])\n\n  var mimeString = dataURI.split(',')[0].split(':')[1].split(';')[0];\n\n\n  var ab = new ArrayBuffer(byteString.length);\n  var ia = new Uint8Array(ab);\n  for (var i = 0; i < byteString.length; i++) {\n      ia[i] = byteString.charCodeAt(i);\n}\n\nreturn new Blob([ab], {type: mimeString});\n\n\n}\n\n\n}\n","<h1></h1>\n\n\n<form [formGroup]=\"postForm\" (ngSubmit)=\"upload()\">\n\n  <table>\n    <tr>\n      <td>Image:</td>\n      <td><input type=\"file\" formControlName=\"image\"></td>\n    </tr>\n    <tr>\n      <td>Title:</td>\n      <td><input type=\"text\" size=\"30\" formControlName=\"title\"></td>\n    </tr>\n    <tr>\n      <td>Text:</td>\n      <td>\n        <textarea cols=\"30\" rows=\"4\" formControlName=\"text\">\n        </textarea>\n      </td>\n    </tr>\n    <tr>\n      <td></td>\n      <td>\n        <button type=\"button\" [routerLink]=\"['/']\">Back</button>\n        <button type=\"submit\">Upload</button>\n      </td>\n    </tr>\n  </table>\n\n</form>\n\n\n<div>\n  <router-outlet></router-outlet>\n</div>"]},"metadata":{},"sourceType":"module","externalDependencies":[]}